<?xml version="1.0" encoding="utf-8"?>
<util:SphereView xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:util="com.apptinic.util.*"
	initialize="init()"
>
	
<fx:Script>
<![CDATA[
	import com.apptinic.terraschema.Location;
	import com.apptinic.util.SphereShape;
	
public const BORDER_COLOR:uint = 0x666666;	
public const BORDER_ALPHA:Number = .05;
public const BORDER_THICKNESS:int = 2;
public const H_BORDER_COLOR:uint = 0xffffff;	
public const H_BORDER_ALPHA:Number = .9;

protected var net:Vector.<SphereShape>;
protected var surfaceFeatures:Vector.<SphereShape>;
//protected var hedron:TruncatedIcosahedron = new TruncatedIcosahedron();
//public var continentBuilder:ContinentBuilder = new ContinentBuilder();
	
public function init():void{
	trace("globe init");
	var shape:SphereShape;
	net = new Vector.<SphereShape>();
	var hedron:TruncatedIcosahedron = new TruncatedIcosahedron();
	for each(shape in hedron.faces){
		shape.alpha = 0;
		shape.borderAlpha = BORDER_ALPHA;
		shape.borderColor = BORDER_COLOR
		shape.borderThickness = BORDER_THICKNESS;
		shape.bend();
		net.push(shape);
		trace("net creation: "+shape.dataItem.i+" , "+shape.dataItem.j);
	}
	surfaceFeatures = new Vector.<SphereShape>();
	//shapes = null;
	shapes = new Vector.<SphereShape>();
	/*
	continentBuilder.generate();
	surfaceFeatures = continentBuilder.tiles;
	
	
		*/
	//shapes = surfaceFeatures.concat(net);
	
	invalidateDisplayList();
}

public function addLocation(loc:Location):void{
	var netItem:SphereShape = getNetFaceForCoordinate(loc.i,loc.j);
	netItem.dataItem = loc;
	var terrainTile:SphereShape = netItem.createTerrainTile();
	terrainTile.bend();
	surfaceFeatures.push(terrainTile);
	shapes = surfaceFeatures.concat(net);
	invalidateDisplayList();
}
	
protected var hoveredLocation:SphereShape;
override protected function onHover(x:Number, y:Number, data:Object=null):void{
	/*var newLoc:SphereShape;
	var pointer3D:Vector3D = to3D(x,y);
	if(pointer3D)
		newLoc = net.findContainingLocation(pointer3D);
	if(newLoc != hoveredLocation){
		if(newLoc){
			newLoc.borderColor = H_BORDER_COLOR;
			newLoc.borderAlpha = H_BORDER_ALPHA;
		}
		if(hoveredLocation){
			hoveredLocation.borderColor = BORDER_COLOR;
			hoveredLocation.borderAlpha = BORDER_ALPHA;
		}
		hoveredLocation = newLoc;
		invalidateDisplayList();
	}*/
}
	
override protected function onClickOrTap(x:Number, y:Number, data:Object=null):void{
	trace("click: "+x+","+y);
}
	
public function getNetFaceForCoordinate(i:int,j:int):SphereShape{
	var k:int=0;
	while(i<net.length && !(net[k].dataItem.i == i && net[k].dataItem.j == j)) k++;
	
	return net[k];
}

]]>
</fx:Script>
</util:SphereView>
