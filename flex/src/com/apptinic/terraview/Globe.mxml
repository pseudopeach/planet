<?xml version="1.0" encoding="utf-8"?>
<util:SphereView xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx" 
	xmlns:util="com.apptinic.util.*"
	initialize="init()"
>
	
<fx:Script>
<![CDATA[
import com.apptinic.util.SphereShape;
public const BORDER_COLOR:uint = 0x666666;	
public const BORDER_ALPHA:Number = .05;
public const BORDER_THICKNESS:int = 2;
public const H_BORDER_COLOR:uint = 0xffffff;	
public const H_BORDER_ALPHA:Number = .9;
public const PENT_RATIO:Number = 1.18299818148;
public var net:TruncatedIcosahedron = new TruncatedIcosahedron();
	
protected function init():void{
	shapes = new Vector.<SphereShape>();
	for(var i:int=0;i<net.curvedTiles.length;i++){
		net.curvedTiles[i].alpha=0;
		net.curvedTiles[i].borderThickness = BORDER_THICKNESS;
		net.curvedTiles[i].borderAlpha = BORDER_ALPHA;
		net.curvedTiles[i].color = BORDER_COLOR;
		shapes.push(net.curvedTiles[i]);
	}
	//invalidateDisplayList();
	
}
	

protected var hoveredLocation:SphereShape;
override protected function onHover(x:Number, y:Number, data:Object=null):void{
	var newLoc:SphereShape;
	var pointer3D:Vector3D = to3D(x,y);
	if(pointer3D)
		newLoc = findContainingLocation(pointer3D);
	if(newLoc != hoveredLocation){
		if(newLoc){
			newLoc.borderColor = H_BORDER_COLOR;
			newLoc.borderAlpha = H_BORDER_ALPHA;
		}
		if(hoveredLocation){
			hoveredLocation.borderColor = BORDER_COLOR;
			hoveredLocation.borderAlpha = BORDER_ALPHA;
		}
		hoveredLocation = newLoc;
		invalidateDisplayList();
	}
}
	
protected function findContainingLocation(surfacePoint:Vector3D):SphereShape{
	var loc:SphereShape;
	var tVect:Vector3D;
	var shortest:Number = 200000;
	var tempDist:Number;
	//trace("pointer position: "+pointer3D.x+", "+pointer3D.y+", "+pointer3D.z);
	for(var i:int=0;i<net.curvedTiles.length;i++){
		//trace("hover near center: "+net.curvedTiles[i].center);
		tVect = surfacePoint.subtract(net.curvedTiles[i].center);
		tempDist = tVect.length;
		if(net.curvedTiles[i].type == "pent") tempDist *= PENT_RATIO;
		if(tempDist < shortest){
			shortest = tempDist;
			loc = net.curvedTiles[i];
		}
	}
	return loc;
}
	
override protected function onClickOrTap(x:Number, y:Number, data:Object=null):void{
	trace("click: "+x+","+y);
}


]]>
</fx:Script>
</util:SphereView>
